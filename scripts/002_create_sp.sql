-- PRODUCT'S STORED PROCEDURES
-- SPXXX : SP_CREATE_PRODUCT

CREATE OR ALTER PROCEDURE SP_CREATE_PRODUCT
	@ID_USER INT,
	@NAME NVARCHAR(100),
	@PRICE DECIMAL(10,2),
	@MIN_STOCK SMALLINT,
	@ID_RETURN INT OUTPUT,
	@ERROR_ID INT OUTPUT,
	@ERROR_DESCRIPTION VARCHAR(MAX) OUTPUT
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION
		IF(@PRICE < 0 OR @MIN_STOCK < 0)
		BEGIN
			SET @ID_RETURN = -1;
			SET @ERROR_ID = 1;
			SET @ERROR_DESCRIPTION = 'DATOS NO VALIDOS'
			ROLLBACK TRANSACTION;
			RETURN;
		END
		IF NOT EXISTS (SELECT 1 FROM [USER] WHERE ID_USER = @ID_USER)
		BEGIN
			SET @ID_RETURN = -1;
			SET @ERROR_ID = 2;
			SET @ERROR_DESCRIPTION = 'USUARIO NO VALIDO'
			ROLLBACK TRANSACTION;
			RETURN;
		END

		INSERT INTO [PRODUCT] ([NAME], PRICE, MIN_STOCK, ID_USER)
			VALUES (@NAME, @PRICE, @MIN_STOCK, @ID_USER)

        SET @ID_RETURN = SCOPE_IDENTITY();

        COMMIT TRANSACTION;

        SET @ERROR_ID = NULL;
        SET @ERROR_DESCRIPTION = NULL;

	END TRY

	BEGIN CATCH
		ROLLBACK TRANSACTION;
        SET @ERROR_ID = ERROR_NUMBER();
        SET @ERROR_DESCRIPTION = 'ERROR SQL';
	END CATCH
END;   
GO

-- SPXXX : SP_UPDATE_PRODUCT

CREATE OR ALTER PROCEDURE SP_UPDATE_PRODUCT
	@ID_USER INT,
	@ID_PRODUCT INT,
	@NAME NVARCHAR(100),
	@PRICE DECIMAL(10,2),
	@MIN_STOCK SMALLINT,
	@ERROR_ID INT OUTPUT,
	@ERROR_DESCRIPTION VARCHAR(MAX) OUTPUT
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION
		IF(@PRICE < 0 OR @MIN_STOCK < 0 OR @NAME = '')
		BEGIN
			SET @ERROR_ID = 1;
			SET @ERROR_DESCRIPTION = 'DATOS NO VALIDOS'
			ROLLBACK TRANSACTION;
			RETURN;
		END
		IF NOT EXISTS (SELECT 1 FROM [dbo].[PRODUCT] WHERE ID_PRODUCT = @ID_PRODUCT AND ID_USER = @ID_USER)
		BEGIN
			SET @ERROR_ID = 3;
			SET @ERROR_DESCRIPTION = 'PRODUCTO NO VALIDO'
			ROLLBACK TRANSACTION;
			RETURN;
		END

		UPDATE [PRODUCT]
		SET [NAME] = @NAME, PRICE = @PRICE, MIN_STOCK = @MIN_STOCK
		WHERE ID_PRODUCT = @ID_PRODUCT

        COMMIT TRANSACTION;

        SET @ERROR_ID = NULL;
        SET @ERROR_DESCRIPTION = NULL;

	END TRY

	BEGIN CATCH
		ROLLBACK TRANSACTION;
        SET @ERROR_ID = ERROR_NUMBER();
        SET @ERROR_DESCRIPTION = 'ERROR SQL';
	END CATCH
END;

-- SPXXX : SP_GET_ACTIVE_PRODUCTS

CREATE OR ALTER PROCEDURE SP_GET_ACTIVE_PRODUCTS
	@ID_USER INT,
	@ERROR_ID INT OUTPUT,
	@ERROR_DESCRIPTION VARCHAR(MAX) OUTPUT
AS
BEGIN
	BEGIN TRY
		IF NOT EXISTS (SELECT 1 FROM [dbo].[USER] WHERE  ID_USER = @ID_USER)
		BEGIN
			SET @ERROR_ID = 2;
			SET @ERROR_DESCRIPTION = 'USUARIO NO VALIDO'
			ROLLBACK TRANSACTION;
			RETURN;
		END

		SELECT * FROM [dbo].[PRODUCT]
		WHERE ID_USER = @ID_USER AND IS_ACTIVE = 1

        SET @ERROR_ID = NULL;
        SET @ERROR_DESCRIPTION = NULL;

	END TRY
	BEGIN CATCH
        SET @ERROR_ID = ERROR_NUMBER();
        SET @ERROR_DESCRIPTION = 'ERROR SQL';
	END CATCH

END;